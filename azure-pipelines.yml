trigger:
- master

resources:
- repo: self
variables:
- group: demo-azure-var-group
- name: vmImageName
  value: 'ubuntu-latest'
- name: imgRepoBackend
  value: 'backend'
- name: imgRepoFrontend
  value: 'frontend'
- name: dockerfile_backend
  value: '$(Build.SourcesDirectory)/src/backend/Dockerfile'
- name: dockerfile_frontend
  value: '$(Build.SourcesDirectory)/src/frontend/Dockerfile'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
#####################################
# Build and Push the Image frontend to ACR:-
##################################### 
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imgRepoFrontend)
        dockerfile: $(dockerfile_frontend)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
            $(Build.BuildId)
            
#####################################
# Build and Push the Image backend to ACR:-
#####################################           
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imgRepoBackend)
        dockerfile: $(dockerfile_backend)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
            $(Build.BuildId)
            
#######################################
# Download and Install Aquasec Trivy:-
#######################################
    - task: CmdLine@2
      displayName: DOWNLOAD AND INSTALL AQUASEC TRIVY
      inputs:
        script: |
         sudo apt-get install wget apt-transport-https gnupg lsb-release
         wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
         echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
         sudo apt-get update
         sudo apt-get install trivy
         trivy -v
         pwd

##################################################################################
# Execute Trivy Scan
##################################################################################
    - task: CmdLine@2
      displayName: RUN AQUASEC TRIVY SCAN BACKEND
      inputs:
        script: |
          trivy image --exit-code 0 --severity HIGH,CRITICAL $(dockerRegistryServiceConnection)/$(imgRepoBackend):$(Build.BuildId) > trivy-image-scan-report-backend-high-critical.txt
          ls -l
          cp -rvf *.txt $(target)
    
    - task: CmdLine@2
      displayName: RUN AQUASEC TRIVY SCAN FRONTEND
      inputs:
        script: |
          trivy image --exit-code 0 --severity HIGH,CRITICAL $(dockerRegistryServiceConnection)/$(imgRepoFrontend):$(Build.BuildId) > trivy-image-scan-report-frontend-high-critical.txt
          ls -l
          cp -rvf *.txt $(target)
##########################
# Publish the Artifacts:-
##########################     
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'manifests'
        path: '$(Build.SourcesDirectory)'
